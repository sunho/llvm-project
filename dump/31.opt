; ModuleID = 'incr_module_23.submodule.0xb9d1ac8f3c452626.ll'
source_filename = "incr_module_23"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.__gnu_cxx::__normal_iterator.7" = type { ptr }
%"class.__gnu_cxx::__normal_iterator.8" = type { ptr }

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZSt25__uninitialized_default_nIPxmET_S1_T0_ = comdat any

$_ZNSt15__new_allocatorIxE10deallocateEPxm = comdat any

$_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES2_ET_S7_T0_ = comdat any

$_ZSt14__copy_move_a1ILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKxSt6vectorIxSaIxEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE = comdat any

$_ZSt12__niter_baseIPxSt6vectorIxSaIxEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorIxSaIxEE11_S_relocateEPxS2_S2_RS0_ = comdat any

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local noundef i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24)) local_unnamed_addr #0 align 2

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local noundef i64 @_ZNSt6vectorIxSaIxEE11_S_max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1)) local_unnamed_addr #0 align 2

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define weak_odr dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3minImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %__a, ptr noundef nonnull align 8 dereferenceable(8) %__b) local_unnamed_addr #0 comdat {
entry:
  %0 = load i64, ptr %__b, align 8
  %1 = load i64, ptr %__a, align 8
  %cmp = icmp ult i64 %0, %1
  %__b.__a = select i1 %cmp, ptr %__b, ptr %__a
  ret ptr %__b.__a
}

; Function Attrs: noinline nounwind optnone uwtable
define weak_odr dso_local void @_ZNSt12_Vector_baseIxSaIxEE17_Vector_impl_dataC2Ev(ptr noundef nonnull align 8 dereferenceable(24) %this) local_unnamed_addr #2 comdat align 2 {
entry:
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %this, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: mustprogress noinline optnone uwtable
define weak_odr dso_local noundef ptr @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n) local_unnamed_addr #3 comdat align 2 {
entry:
  %cmp.not = icmp eq i64 %__n, 0
  br i1 %cmp.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %entry
  %call.i = tail call noundef ptr @_ZNSt15__new_allocatorIxE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1) %this, i64 noundef %__n, ptr noundef null)
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi ptr [ %call.i, %cond.true ], [ null, %entry ]
  ret ptr %cond
}

; Function Attrs: mustprogress noinline optnone uwtable
declare dso_local noundef ptr @_ZNSt15__new_allocatorIxE8allocateEmPKv(ptr noundef nonnull align 1 dereferenceable(1), i64 noundef, ptr noundef) local_unnamed_addr #3 align 2

; Function Attrs: mustprogress noinline optnone uwtable
define weak_odr dso_local noundef ptr @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(ptr noundef %__first, i64 noundef %__n) local_unnamed_addr #3 comdat {
entry:
  %call = tail call noundef ptr @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(ptr noundef %__first, i64 noundef %__n)
  ret ptr %call
}

; Function Attrs: mustprogress noinline optnone uwtable
declare dso_local noundef ptr @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(ptr noundef, i64 noundef) local_unnamed_addr #3 align 2

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define weak_odr dso_local void @_ZNSt15__new_allocatorIxE10deallocateEPxm(ptr noundef nonnull align 1 dereferenceable(1) %this, ptr noundef %__p, i64 noundef %__n) local_unnamed_addr #0 comdat align 2 {
entry:
  tail call void @_ZdlPv(ptr noundef %__p) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #4

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define weak_odr dso_local ptr @_ZSt12__niter_wrapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES2_ET_S7_T0_(ptr %__from.coerce, ptr noundef %__res) local_unnamed_addr #0 comdat {
entry:
  %__from = alloca %"class.__gnu_cxx::__normal_iterator.7", align 8
  store ptr %__from.coerce, ptr %__from, align 8
  %call = tail call noundef ptr @_ZSt12__niter_baseIPxSt6vectorIxSaIxEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(ptr %__from.coerce) #7
  %sub.ptr.lhs.cast = ptrtoint ptr %__res to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %call to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %call2 = call ptr @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(ptr noundef nonnull align 8 dereferenceable(8) %__from, i64 noundef %sub.ptr.div) #7
  ret ptr %call2
}

; Function Attrs: mustprogress noinline optnone uwtable
define weak_odr dso_local noundef ptr @_ZSt14__copy_move_a1ILb0EPKxPxET1_T0_S4_S3_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result) local_unnamed_addr #3 comdat {
entry:
  %call = tail call noundef ptr @_ZSt14__copy_move_a2ILb0EPKxPxET1_T0_S4_S3_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result)
  ret ptr %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define weak_odr dso_local noundef ptr @_ZSt12__niter_baseIPKxSt6vectorIxSaIxEEET_N9__gnu_cxx17__normal_iteratorIS5_T0_EE(ptr %__it.coerce) local_unnamed_addr #0 comdat {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  store ptr %__it.coerce, ptr %__it, align 8
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__it) #7
  %0 = load ptr, ptr %call, align 8
  ret ptr %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define weak_odr dso_local noundef ptr @_ZSt12__niter_baseIPxSt6vectorIxSaIxEEET_N9__gnu_cxx17__normal_iteratorIS4_T0_EE(ptr %__it.coerce) local_unnamed_addr #0 comdat {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator.7", align 8
  store ptr %__it.coerce, ptr %__it, align 8
  %call = call noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8) %__it) #7
  %0 = load ptr, ptr %call, align 8
  ret ptr %0
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local ptr @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(ptr noundef nonnull align 8 dereferenceable(8), i64 noundef) local_unnamed_addr #0 align 2

; Function Attrs: mustprogress noinline optnone uwtable
declare dso_local noundef ptr @_ZSt14__copy_move_a2ILb0EPKxPxET1_T0_S4_S3_(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0 align 2

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0 align 2

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define weak_odr dso_local noundef i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) local_unnamed_addr #0 comdat align 2 {
entry:
  %call = tail call noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  %call2 = tail call noundef i64 @_ZNSt6vectorIxSaIxEE11_S_max_sizeERKS0_(ptr noundef nonnull align 1 dereferenceable(1) %call) #7
  ret i64 %call2
}

; Function Attrs: mustprogress noinline optnone uwtable
define weak_odr dso_local noundef i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(ptr noundef nonnull align 8 dereferenceable(24) %this, i64 noundef %__n, ptr noundef %__s) local_unnamed_addr #3 comdat align 2 {
entry:
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store i64 %__n, ptr %__n.addr, align 8
  %call = tail call noundef i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  %call2 = tail call noundef i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  %sub = sub i64 %call, %call2
  %cmp = icmp ult i64 %sub, %__n
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef %__s) #8
  unreachable

if.end:                                           ; preds = %entry
  %call3 = tail call noundef i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  %call4 = tail call noundef i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  store i64 %call4, ptr %ref.tmp, align 8
  %call5 = call noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3maxImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8) %ref.tmp, ptr noundef nonnull align 8 dereferenceable(8) %__n.addr)
  %0 = load i64, ptr %call5, align 8
  %add = add i64 %0, %call3
  %call6 = call noundef i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  %cmp7 = icmp ult i64 %add, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %call8 = call noundef i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  %cmp9 = icmp ugt i64 %add, %call8
  br i1 %cmp9, label %cond.true, label %cond.end

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call noundef i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(ptr noundef nonnull align 8 dereferenceable(24) %this) #7
  br label %cond.end

cond.end:                                         ; preds = %lor.lhs.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %add, %lor.lhs.false ]
  ret i64 %cond
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
define weak_odr dso_local noundef ptr @_ZNSt6vectorIxSaIxEE11_S_relocateEPxS2_S2_RS0_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) local_unnamed_addr #0 comdat align 2 {
entry:
  %call = tail call noundef ptr @_ZSt12__relocate_aIPxS0_SaIxEET0_T_S3_S2_RT1_(ptr noundef %__first, ptr noundef %__last, ptr noundef %__result, ptr noundef nonnull align 1 dereferenceable(1) %__alloc) #7
  ret ptr %call
}

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local noundef nonnull align 1 dereferenceable(1) ptr @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(ptr noundef nonnull align 8 dereferenceable(24)) local_unnamed_addr #0 align 2

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local noundef nonnull align 8 dereferenceable(8) ptr @_ZSt3maxImERKT_S2_S2_(ptr noundef nonnull align 8 dereferenceable(8), ptr noundef nonnull align 8 dereferenceable(8)) local_unnamed_addr #0

; Function Attrs: mustprogress noinline nounwind optnone uwtable
declare dso_local noundef ptr @_ZSt12__relocate_aIPxS0_SaIxEET0_T_S3_S2_RT1_(ptr noundef, ptr noundef, ptr noundef, ptr noundef nonnull align 1 dereferenceable(1)) local_unnamed_addr #0

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { mustprogress noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { noreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { noinline nounwind optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress noinline optnone uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nobuiltin nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn }

!llvm.module.flags = !{!0, !1, !2, !3, !4}
!llvm.ident = !{!5}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{i32 7, !"frame-pointer", i32 2}
!5 = !{!"clang version 18.0.0 (git@github.com:sunho/llvm-project.git 4e3adab12b509610d81502bb640accbaea39b9f9)"}
